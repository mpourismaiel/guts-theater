version: '3'

networks:
  theaternet:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  guts-theater:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      DB_HOST: "couchdb"
      DB_USER: "admin"
      DB_PASSWORD: "password"
    depends_on:
      - couchdb
    networks:
      - theaternet

  guts-theater-client:
    build:
      context: ../guts-theater-fe
      dockerfile: Dockerfile
    ports:
      - "4005:80"
    environment:
      API_HOST: "guts-theater:4000"
    depends_on:
      - guts-theater
    networks:
      - theaternet

  couchdb:
    image: "couchdb:3.2.1"
    logging:
      driver: none
    restart: unless-stopped
    ports:
      - "5984:5984"
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: password
    networks:
      - theaternet

  prometheus:
    image: prom/prometheus:latest
    container_name: guts-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - theaternet

  grafana:
    image: grafana/grafana:6.7.2
    container_name: guts-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - theaternet
